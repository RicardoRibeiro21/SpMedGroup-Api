CREATE DATABASE SPMEDGROUP

USE SPMEDGROUP

--------------------------------CRIANDO TABELAS------------------------------------
-- Criando tabela de tipo usuários primeiro por não depender de nenhuma outro
CREATE TABLE TIPO_USUARIO (
	ID INT IDENTITY PRIMARY KEY
	, TIPO VARCHAR(50) UNIQUE NOT NULL
);
SELECT * FROM TIPO_USUARIO
-- Criando tabela usuários
CREATE TABLE USUARIOS (
	ID INT IDENTITY PRIMARY KEY
	, NOME VARCHAR(250) NOT NULL
	, ID_TIPO_USUARIO INT NOT NULL FOREIGN KEY REFERENCES TIPO_USUARIO(ID)
	, EMAIL VARCHAR(250) NOT NULL UNIQUE 
	, SENHA VARCHAR(250) NOT NULL 
	, DATA_NASCIMENTO DATETIME NOT NULL
);

SELECT * FROM USUARIOS

--Criando tabela de especialização do médico 
CREATE TABLE ESPECIALIZACOES(
	ID INT IDENTITY PRIMARY KEY 
	, ESPECIALIZACAO VARCHAR(250) NOT NULL UNIQUE 
);

SELECT * FROM ESPECIALIZACOES

--Criando tabela da Clínica 
CREATE TABLE CLINICA (
	ID INT IDENTITY PRIMARY KEY
	, NOME VARCHAR(250) UNIQUE NOT NULL 
	, CEP CHAR(15) NOT NULL
	, RAZAO_SOCIAL VARCHAR(100) NOT NULL
	, LOGRADOURO VARCHAR (100) NOT NULL
	,CNPJ CHAR(18) UNIQUE NOT NULL
);

SELECT * FROM CLINICA

--Criando tabela de médicos
CREATE TABLE MEDICOS(
	 CRM CHAR(8)  NOT NULL PRIMARY KEY
	, NOME VARCHAR(250) NOT NULL 
	, ID_ESPECIALIZACAO INT FOREIGN KEY REFERENCES ESPECIALIZACOES (ID) NOT NULL
	, ID_CLINICA INT FOREIGN KEY REFERENCES CLINICA (ID) NOT NULL
);

SELECT * FROM MEDICOS

ALTER TABLE MEDICOS
	ADD EMAIL VARCHAR(250) NOT NULL UNIQUE

--Criando tabela de prontuários
CREATE TABLE PRONTUARIOS (
	ID INT IDENTITY PRIMARY KEY
	, ID_USUARIO INT FOREIGN KEY REFERENCES USUARIOS (ID) NOT NULL UNIQUE
	, CPF CHAR(11) UNIQUE NOT NULL
	, RG CHAR(10) UNIQUE NOT NULL	
);
SELECT * FROM PRONTUARIOS

ALTER TABLE PRONTUARIOS 
	ADD TELEFONE VARCHAR(11) NOT NULL

-- Ciando tabela de STATUS_CONSULTAS 
CREATE TABLE STATUS_CONSULTA (
	ID INT IDENTITY PRIMARY KEY
	, SITUACAO VARCHAR(30) NOT NULL UNIQUE  
	);

	SELECT * FROM STATUS_CONSULTA

--Criando tabela de consultas
CREATE TABLE CONSULTAS (
	ID INT IDENTITY PRIMARY KEY
	, CRM_MEDICO CHAR(8) NOT NULL FOREIGN KEY REFERENCES MEDICOS (CRM)
	, DATA_CONSULTA DATETIME NOT NULL 
	, STATUS_CONSULTA INT NOT NULL FOREIGN KEY REFERENCES STATUS_CONSULTA(ID)
	, ID_PRONTUARIO INT NOT NULL FOREIGN KEY REFERENCES PRONTUARIOS (ID)
	, RESULTADO VARCHAR(500)  
);

ALTER TABLE CONSULTAS 
	ADD ID_USUARIO INT NOT NULL FOREIGN KEY REFERENCES USUARIOS(ID)
SELECT * FROM CONSULTAS

-------------------------------FIM - CRIANDO TABELAS---------------------------------

----------------------------INSERINDO DADOS TESTE------------------------------------

SELECT * FROM TIPO_USUARIO
INSERT INTO TIPO_USUARIO
	VALUES('Administrador'), ('Comum');

SELECT * FROM USUARIOS
INSERT INTO USUARIOS
	VALUES('Ricardo Ribeiro', '2', 'ricardo.sao@hotmail.com', 'abc123', '10/11/2000');

------------------------------------Views--------------------------------------------

							--Implementação pendente--

------------------------------------Funções------------------------------------------
--Pegando a data de nascimento e calculando a idade
SELECT NOME, DATA_NASCIMENTO,
	YEAR(GETDATE()) - YEAR (DATA_NASCIMENTO) AS IDADE_USUARIO
	FROM USUARIOS	

--Convertendo a data de nascimento para dd-mm-yyyy
SELECT CONVERT (VARCHAR, DATA_NASCIMENTO, 103) FROM USUARIOS

--Calculando a idade do usuário todo dia.
SELECT NOME, DATA_NASCIMENTO,
	DATEDIFF(dd, DATA_NASCIMENTO, GETDATE()) AS DIAS -- Em dias
FROM USUARIOS


--Calculando a quantidade de usuários cadastrados
GO
SELECT COUNT (DISTINCT ID)
	FROM USUARIOS 
GO
SELECT * FROM CONSULTAS
--------------------------------------JOINS---------------------------------------
	--Join das consultas, prontuários e usuários
SELECT C.CRM_MEDICO, C.STATUS_CONSULTA, C.DATA_CONSULTA, U.NOME, U.DATA_NASCIMENTO, P.CPF, P.RG FROM CONSULTAS C JOIN PRONTUARIOS P ON C.ID_PRONTUARIO = P.ID
	JOIN USUARIOS U ON U.ID = P.ID_USUARIO;

	--Join das tabelas médicos, especializações e clínica.
SELECT M.CRM, M.NOME, E.ESPECIALIZACAO, C.NOME,C.CNPJ,C.LOGRADOURO,C.RAZAO_SOCIAL,C.CEP	FROM MEDICOS M JOIN CLINICA C ON M.ID_CLINICA = C.ID
	JOIN ESPECIALIZACOES E ON M.ID_ESPECIALIZACAO = E.ID;

SELECT C.STATUS_CONSULTA, C.RESULTADO, C.DATA_CONSULTA, U.NOME, U.DATA_NASCIMENTO, C.ID_PRONTUARIO, P.CPF, P.RG FROM MEDICOS M JOIN CONSULTAS C ON M.CRM = C.CRM_MEDICO JOIN PRONTUARIOS P ON C.ID_PRONTUARIO = P.ID JOIN USUARIOS U ON U.ID = P.ID_USUARIO WHERE M.CRM = '53452-SP'

	 